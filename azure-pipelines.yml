# .azure-pipelines/azure-pipelines.yml
# Đặt file này trong thư mục .azure-pipelines/ (hoặc gốc) trong repo fromhue/update-ip của bạn

trigger:
- main # Kích hoạt pipeline khi có push vào nhánh 'main'

pool:
  name: agent_build # Sử dụng Agent Pool mà bạn đã tạo cho server local của mình

variables:
  # Tên image Docker của ứng dụng .NET Core bạn sẽ build
  DOCKER_APP_IMAGE_NAME: update-ip-dotnet-app # Đổi tên để dễ phân biệt
  # Tag cho image Docker
  DOCKER_APP_IMAGE_TAG: '$(Build.BuildId)'

stages:
- stage: BuildDockerImage
  displayName: 'Build .NET Core Application Docker Image'
  jobs:
  - job: BuildApp
    displayName: 'Build and Tag Docker Image'
    steps:
    - checkout: self # Checkout mã nguồn từ repository GitHub (fromhue/update-ip)

    - task: CmdLine@2
      displayName: 'Verify Docker Availability'
      inputs:
        script: |
          echo "Checking Docker and Docker Compose versions..."
          docker version --format '{{.Server.Version}}'
          docker compose version

    # Bước 1: Build Docker Image cho ứng dụng .NET Core của bạn
    # Dockerfile của bạn nằm ở thư mục gốc của repo
    - task: Docker@2
      displayName: 'Build .NET Core App Docker Image'
      inputs:
        command: build
        dockerfile: 'Dockerfile' # Đường dẫn đến Dockerfile của ứng dụng (trong thư mục gốc)
        tags: |
          $(DOCKER_APP_IMAGE_NAME):$(DOCKER_APP_IMAGE_TAG)
          $(DOCKER_APP_IMAGE_NAME):latest
        # buildContext: '$(Build.SourcesDirectory)' # Context là thư mục gốc của repo

- stage: DeployToLocalStack
  displayName: 'Deploy to Local Docker Swarm'
  dependsOn: BuildDockerImage
  jobs:
  - job: DeployApp
    displayName: 'Deploy to Docker Swarm via Compose'
    steps:
    - checkout: self

    - task: CmdLine@2
      displayName: 'Deploy update-ip .NET Core App to Docker Stack'
      inputs:
        script: |
          echo "Navigating to source directory: $(Build.SourcesDirectory)"
          cd $(Build.SourcesDirectory)

          echo "Exporting image variables for docker-compose..."
          export DOCKER_APP_IMAGE_NAME=$(DOCKER_APP_IMAGE_NAME)
          export DOCKER_APP_IMAGE_TAG=$(DOCKER_APP_IMAGE_TAG)

          echo "Current directory: $(pwd)"
          echo "Contents:"
          ls -Fal

          if [ ! -f docker-compose.yml ]; then
            echo "Error: docker-compose.yml not found in $(Build.SourcesDirectory)"
            exit 1
          fi

          echo "Deploying Docker stack 'update-ip-dotnet-stack'..." # Đổi tên stack để dễ phân biệt
          docker stack deploy -c docker-compose.yml update-ip-dotnet-stack

          echo "Deployment initiated. Check 'docker stack ps update-ip-dotnet-stack' on your master node."
